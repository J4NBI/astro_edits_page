---
import { Play } from 'lucide-react';
import { Image } from 'astro:assets';

// Importiere die Vorschaubilder
import com1 from '@/assets/images/com/01com.webp';
import com2 from '@/assets/images/com/02com.webp';
import com3 from '@/assets/images/com/03com.webp';
import com4 from '@/assets/images/com/04com.webp';
import com5 from '@/assets/images/com/05com.webp';
import com6 from '@/assets/images/com/06com.webp';

// Helper function to extract YouTube video ID
function getYouTubeId(url: string) {
  const regExp = /^.*(youtu.be\/|v\/|u\/\w\/|embed\/|watch\?v=|&v=)([^#&?]*).*/;
  const match = url.match(regExp);
  return (match && match[2].length === 11) ? match[2] : url;
}

// Array der Videos mit eigenen Vorschaubildern
const videos = [
{ 
    id: getYouTubeId('https://youtu.be/3lSd9gwD-bM'), 
    title: 'OBI  Mach es zu deinem Projekt!',
    thumbnail: com4
  },
  { 
    id: getYouTubeId('https://youtu.be/tEipssYoAc4'), 
    title: 'Mercedes Citan',
    thumbnail: com2
  },
  { 
    id: getYouTubeId('https://youtu.be/ZYHGHuGoFZQ'), 
    title: 'juice plus+',
    thumbnail: com1
  },
  { 
    id: getYouTubeId('https://youtu.be/bcqlxx_dD8A'), 
    title: 'CEDEO FACTORY',
    thumbnail: com3
  },
  
  { 
    id: getYouTubeId('https://youtu.be/q1dBDap_NuE'), 
    title: 'REVIEW',
    thumbnail: com5
  },
  { 
    id: getYouTubeId('https://youtu.be/-V4tblVimXY'), 
    title: 'Swisscom',
    thumbnail: com6
  }
];
---

<div class="movie-gallery-2">
  <div class="grid md:grid-cols-2 gap-4">
    {videos.map((video) => (
      <div class="video-item-2 relative cursor-pointer group w-30" data-video-id={video.id}>
        <div class="aspect-w-16 bg-gray-100 rounded-lg overflow-hidden">
          <Image 
            src={video.thumbnail || "/placeholder.svg"}
            alt={`Vorschaubild für ${video.title}`}
            class="w-full h-full object-cover transition-transform group-hover:scale-105"
            width={640}
            height={360}
          />
          <div class="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-40 transition-all flex items-center justify-center">
            <div class="relative z-10">
              <Play size={48}  />
            </div>
          </div>
        </div>
        <p class="mt-2 text-center font-semibold line-clamp-2">{video.title}</p>
      </div>
    ))}
  </div>

  <div id="videoModal-2" class="fixed inset-0 bg-black bg-opacity-90 flex items-center justify-center hidden z-50">
    <div class="relative w-full max-w-4xl mx-4">
      <button id="closeModal-2" class="absolute -top-12 right-0 text-white hover:text-gray-300 transition-colors">
        <span class="sr-only">Video schließen</span>
        <svg class="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>
      <div class="aspect-w-16">
        <iframe 
          id="videoFrame-2" 
          class="w-full h-full rounded-lg"
          allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" 
          allowfullscreen
        ></iframe>
      </div>
    </div>
  </div>
</div>

<style>
  .aspect-w-16 {
    position: relative;
    width: 100%;
    padding-bottom: 56.25%; /* 16:9 Aspect Ratio */
  }
  
  .aspect-w-16 > * {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
</style>

<script>
  const gallery = document.querySelector('.movie-gallery-2');
  const modal = document.getElementById('videoModal-2');
  const videoFrame = document.getElementById('videoFrame-2') as HTMLIFrameElement;
  const closeButton = document.getElementById('closeModal-2');

  gallery?.addEventListener('click', (e) => {
    const target = e.target as HTMLElement;
    const videoItem = target.closest('.video-item-2');
    if (videoItem) {
      const videoId = videoItem.getAttribute('data-video-id');
      if (videoId) {
        videoFrame.src = `https://www.youtube.com/embed/${videoId}?autoplay=1&rel=0`;
        modal?.classList.remove('hidden');
        document.body.style.overflow = 'hidden';
      }
    }
  });

  closeButton?.addEventListener('click', closeModal);
  modal?.addEventListener('click', (e) => {
    if (e.target === modal) closeModal();
  });

  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape') closeModal();
  });

  function closeModal() {
    modal?.classList.add('hidden');
    document.body.style.overflow = '';
    videoFrame.src = '';
  }
</script>